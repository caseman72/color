(function() {
  function h(a) {
    if(a) {
      var b = /^#([a-fA-F0-9]{6})$/, f = /^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*([\d\.]+)\s*)?\)$/, i = /^rgba?\(\s*([\d\.]+)\%\s*,\s*([\d\.]+)\%\s*,\s*([\d\.]+)\%\s*(?:,\s*([\d\.]+)\s*)?\)$/, o = /(\D+)/, d = [0, 0, 0], g = 1, c = a.match(/^#([a-fA-F0-9]{3})$/);
      if(c) {
        c = c[1];
        for(a = 0;a < d.length;a++) {
          d[a] = parseInt(c[a] + c[a], 16)
        }
      }else {
        if(c = a.match(b)) {
          c = c[1];
          for(a = 0;a < d.length;a++) {
            d[a] = parseInt(c.slice(a * 2, a * 2 + 2), 16)
          }
        }else {
          if(c = a.match(f)) {
            for(a = 0;a < d.length;a++) {
              d[a] = parseInt(c[a + 1])
            }
            g = parseFloat(c[4])
          }else {
            if(c = a.match(i)) {
              for(a = 0;a < d.length;a++) {
                d[a] = Math.round(parseFloat(c[a + 1]) * 2.55)
              }
              g = parseFloat(c[4])
            }else {
              if(c = a.match(o)) {
                if(c[1] == "transparent") {
                  return[0, 0, 0, 0]
                }
                d = color_convert.keyword2rgb(c[1]);
                if(!d) {
                  return
                }
              }
            }
          }
        }
      }
      for(a = 0;a < d.length;a++) {
        d[a] = e(d[a], 0, 255)
      }
      g = !g && g != 0 ? 1 : e(g, 0, 1);
      d.push(g);
      return d
    }
  }
  function j(a) {
    if(a) {
      var b = a.match(/^hsla?\(\s*(\d+)\s*,\s*([\d\.]+)%\s*,\s*([\d\.]+)%\s*(?:,\s*([\d\.]+)\s*)?\)/);
      if(b) {
        var a = e(parseInt(b[1]), 0, 360), f = e(parseFloat(b[2]), 0, 100), i = e(parseFloat(b[3]), 0, 100), b = e(parseFloat(b[4]) || 1, 0, 1);
        return[a, f, i, b]
      }
    }
  }
  function l(a, b) {
    return"rgba(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + (b || a[3] || 1) + ")"
  }
  function m(a, b) {
    var f = Math.round(a[0] / 255 * 100), i = Math.round(a[1] / 255 * 100), e = Math.round(a[2] / 255 * 100);
    return"rgba(" + f + "%, " + i + "%, " + e + "%, " + (b || a[3] || 1) + ")"
  }
  function n(a, b) {
    return"hsla(" + a[0] + ", " + a[1] + "%, " + a[2] + "%, " + (b || a[3] || 1) + ")"
  }
  function e(a, b, f) {
    return Math.min(Math.max(b, a), f)
  }
  function k(a) {
    a = a.toString(16).toUpperCase();
    return a.length < 2 ? "0" + a : a
  }
  if(typeof window.color_convert == "undefined") {
    throw"color-convert required";
  }
  window.color_string = {getRgba:h, getHsla:j, getRgb:function(a) {
    return h(a).slice(0, 3)
  }, getHsl:function(a) {
    return j(a).slice(0, 3)
  }, getAlpha:function(a) {
    var b = h(a);
    if(b) {
      return b[3]
    }else {
      if(b = j(a)) {
        return b[3]
      }
    }
  }, hexString:function(a) {
    return"#" + k(a[0]) + k(a[1]) + k(a[2])
  }, rgbString:function(a, b) {
    return b < 1 || a[3] && a[3] < 1 ? l(a, b) : "rgb(" + a[0] + ", " + a[1] + ", " + a[2] + ")"
  }, rgbaString:l, percentString:function(a, b) {
    if(b < 1 || a[3] && a[3] < 1) {
      return m(a, b)
    }
    var f = Math.round(a[0] / 255 * 100), e = Math.round(a[1] / 255 * 100), h = Math.round(a[2] / 255 * 100);
    return"rgb(" + f + "%, " + e + "%, " + h + "%)"
  }, percentaString:m, hslString:function(a, b) {
    return b < 1 || a[3] && a[3] < 1 ? n(a, b) : "hsl(" + a[0] + ", " + a[1] + "%, " + a[2] + "%)"
  }, hslaString:n, keyword:function(a) {
    return color_convert.rgb2keyword(a.slice(0, 3))
  }}
})();

