(function() {
  function m(d) {
    var a = d[0] / 255, c = d[1] / 255, b = d[2] / 255, d = Math.min(a, c, b), e = Math.max(a, c, b), g = e - d, f;
    e == d ? f = 0 : a == e ? f = (c - b) / g : c == e ? f = 2 + (b - a) / g : b == e && (f = 4 + (a - c) / g);
    f = Math.min(f * 60, 360);
    f < 0 && (f += 360);
    a = (d + e) / 2;
    return[f, (e == d ? 0 : a <= 0.5 ? g / (e + d) : g / (2 - e - d)) * 100, a * 100]
  }
  function a(d) {
    var a = d[0], c = d[1], d = d[2], b = Math.min(a, c, d), e = Math.max(a, c, d), f = e - b, g, i;
    i = e == 0 ? 0 : f / e * 1E3 / 10;
    e == b ? g = 0 : a == e ? g = (c - d) / f : c == e ? g = 2 + (d - a) / f : d == e && (g = 4 + (a - c) / f);
    g = Math.min(g * 60, 360);
    g < 0 && (g += 360);
    return[g, i, e / 255 * 1E3 / 10]
  }
  function b(d) {
    var a = d[0] / 255, c = d[1] / 255, d = d[2] / 255, b;
    b = Math.min(1 - a, 1 - c, 1 - d);
    return[(1 - a - b) / (1 - b) * 100, (1 - c - b) / (1 - b) * 100, (1 - d - b) / (1 - b) * 100, b * 100]
  }
  function e(d) {
    return i[JSON.stringify(d)]
  }
  function j(d) {
    var a = d[0] / 255, c = d[1] / 255, d = d[2] / 255, a = a > 0.04045 ? Math.pow((a + 0.055) / 1.055, 2.4) : a / 12.92, c = c > 0.04045 ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92, d = d > 0.04045 ? Math.pow((d + 0.055) / 1.055, 2.4) : d / 12.92;
    return[(a * 0.4124 + c * 0.3576 + d * 0.1805) * 100, (a * 0.2126 + c * 0.7152 + d * 0.0722) * 100, (a * 0.0193 + c * 0.1192 + d * 0.9505) * 100]
  }
  function f(d) {
    var a = j(d), d = a[0], c = a[1], a = a[2];
    d /= 95.047;
    c /= 100;
    a /= 108.883;
    d = d > 0.008856 ? Math.pow(d, 1 / 3) : 7.787 * d + 16 / 116;
    c = c > 0.008856 ? Math.pow(c, 1 / 3) : 7.787 * c + 16 / 116;
    a = a > 0.008856 ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116;
    return[116 * c - 16, 500 * (d - c), 200 * (c - a)]
  }
  function h(d) {
    var a = d[0] / 360, c = d[1] / 100, d = d[2] / 100, b, e;
    if(c == 0) {
      return b = d * 255, [b, b, b]
    }
    c = d < 0.5 ? d * (1 + c) : d + c - d * c;
    d = 2 * d - c;
    e = [0, 0, 0];
    for(var g = 0;g < 3;g++) {
      b = a + 1 / 3 * -(g - 1), b < 0 && b++, b > 1 && b--, b = 6 * b < 1 ? d + (c - d) * 6 * b : 2 * b < 1 ? c : 3 * b < 2 ? d + (c - d) * (2 / 3 - b) * 6 : d, e[g] = b * 255
    }
    return e
  }
  function c(d) {
    var a = d[0], c = d[1] / 100, d = d[2] / 100;
    d *= 2;
    c *= d <= 1 ? d : 2 - d;
    return[a, 2 * c / (d + c) * 100, (d + c) / 2 * 100]
  }
  function g(d) {
    var a = d[0] / 60, c = d[1] / 100, d = d[2] / 100, b = Math.floor(a) % 6, e = a - Math.floor(a), a = 255 * d * (1 - c), g = 255 * d * (1 - c * e), c = 255 * d * (1 - c * (1 - e));
    d *= 255;
    switch(b) {
      case 0:
        return[d, c, a];
      case 1:
        return[g, d, a];
      case 2:
        return[a, d, c];
      case 3:
        return[a, g, d];
      case 4:
        return[c, a, d];
      case 5:
        return[d, a, g]
    }
  }
  function o(d) {
    var a = d[0], c = d[1] / 100, b = d[2] / 100, d = (2 - c) * b;
    c *= b;
    c /= d <= 1 ? d : 2 - d;
    d /= 2;
    return[a, c * 100, d * 100]
  }
  function n(d) {
    var a = d[1] / 100, c = d[2] / 100, b = d[3] / 100, d = 1 - Math.min(1, d[0] / 100 * (1 - b) + b), a = 1 - Math.min(1, a * (1 - b) + b), c = 1 - Math.min(1, c * (1 - b) + b);
    return[d * 255, a * 255, c * 255]
  }
  function p(a) {
    var c = a[0] / 100, b = a[1] / 100, e = a[2] / 100, g, a = c * 3.2406 + b * -1.5372 + e * -0.4986;
    g = c * -0.9689 + b * 1.8758 + e * 0.0415;
    c = c * 0.0557 + b * -0.204 + e * 1.057;
    a = a > 0.0031308 ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055 : a *= 12.92;
    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g *= 12.92;
    c = c > 0.0031308 ? 1.055 * Math.pow(c, 1 / 2.4) - 0.055 : c *= 12.92;
    return[(a < 0 ? 0 : a) * 255, (g < 0 ? 0 : g) * 255, (c < 0 ? 0 : c) * 255]
  }
  function k(a) {
    return l[a]
  }
  var l = {aliceblue:[240, 248, 255], antiquewhite:[250, 235, 215], aqua:[0, 255, 255], aquamarine:[127, 255, 212], azure:[240, 255, 255], beige:[245, 245, 220], bisque:[255, 228, 196], black:[0, 0, 0], blanchedalmond:[255, 235, 205], blue:[0, 0, 255], blueviolet:[138, 43, 226], brown:[165, 42, 42], burlywood:[222, 184, 135], cadetblue:[95, 158, 160], chartreuse:[127, 255, 0], chocolate:[210, 105, 30], coral:[255, 127, 80], cornflowerblue:[100, 149, 237], cornsilk:[255, 248, 220], crimson:[220, 20, 
  60], cyan:[0, 255, 255], darkblue:[0, 0, 139], darkcyan:[0, 139, 139], darkgoldenrod:[184, 134, 11], darkgray:[169, 169, 169], darkgreen:[0, 100, 0], darkgrey:[169, 169, 169], darkkhaki:[189, 183, 107], darkmagenta:[139, 0, 139], darkolivegreen:[85, 107, 47], darkorange:[255, 140, 0], darkorchid:[153, 50, 204], darkred:[139, 0, 0], darksalmon:[233, 150, 122], darkseagreen:[143, 188, 143], darkslateblue:[72, 61, 139], darkslategray:[47, 79, 79], darkslategrey:[47, 79, 79], darkturquoise:[0, 206, 
  209], darkviolet:[148, 0, 211], deeppink:[255, 20, 147], deepskyblue:[0, 191, 255], dimgray:[105, 105, 105], dimgrey:[105, 105, 105], dodgerblue:[30, 144, 255], firebrick:[178, 34, 34], floralwhite:[255, 250, 240], forestgreen:[34, 139, 34], fuchsia:[255, 0, 255], gainsboro:[220, 220, 220], ghostwhite:[248, 248, 255], gold:[255, 215, 0], goldenrod:[218, 165, 32], gray:[128, 128, 128], green:[0, 128, 0], greenyellow:[173, 255, 47], grey:[128, 128, 128], honeydew:[240, 255, 240], hotpink:[255, 105, 
  180], indianred:[205, 92, 92], indigo:[75, 0, 130], ivory:[255, 255, 240], khaki:[240, 230, 140], lavender:[230, 230, 250], lavenderblush:[255, 240, 245], lawngreen:[124, 252, 0], lemonchiffon:[255, 250, 205], lightblue:[173, 216, 230], lightcoral:[240, 128, 128], lightcyan:[224, 255, 255], lightgoldenrodyellow:[250, 250, 210], lightgray:[211, 211, 211], lightgreen:[144, 238, 144], lightgrey:[211, 211, 211], lightpink:[255, 182, 193], lightsalmon:[255, 160, 122], lightseagreen:[32, 178, 170], lightskyblue:[135, 
  206, 250], lightslategray:[119, 136, 153], lightslategrey:[119, 136, 153], lightsteelblue:[176, 196, 222], lightyellow:[255, 255, 224], lime:[0, 255, 0], limegreen:[50, 205, 50], linen:[250, 240, 230], magenta:[255, 0, 255], maroon:[128, 0, 0], mediumaquamarine:[102, 205, 170], mediumblue:[0, 0, 205], mediumorchid:[186, 85, 211], mediumpurple:[147, 112, 219], mediumseagreen:[60, 179, 113], mediumslateblue:[123, 104, 238], mediumspringgreen:[0, 250, 154], mediumturquoise:[72, 209, 204], mediumvioletred:[199, 
  21, 133], midnightblue:[25, 25, 112], mintcream:[245, 255, 250], mistyrose:[255, 228, 225], moccasin:[255, 228, 181], navajowhite:[255, 222, 173], navy:[0, 0, 128], oldlace:[253, 245, 230], olive:[128, 128, 0], olivedrab:[107, 142, 35], orange:[255, 165, 0], orangered:[255, 69, 0], orchid:[218, 112, 214], palegoldenrod:[238, 232, 170], palegreen:[152, 251, 152], paleturquoise:[175, 238, 238], palevioletred:[219, 112, 147], papayawhip:[255, 239, 213], peachpuff:[255, 218, 185], peru:[205, 133, 63], 
  pink:[255, 192, 203], plum:[221, 160, 221], powderblue:[176, 224, 230], purple:[128, 0, 128], red:[255, 0, 0], rosybrown:[188, 143, 143], royalblue:[65, 105, 225], saddlebrown:[139, 69, 19], salmon:[250, 128, 114], sandybrown:[244, 164, 96], seagreen:[46, 139, 87], seashell:[255, 245, 238], sienna:[160, 82, 45], silver:[192, 192, 192], skyblue:[135, 206, 235], slateblue:[106, 90, 205], slategray:[112, 128, 144], slategrey:[112, 128, 144], snow:[255, 250, 250], springgreen:[0, 255, 127], steelblue:[70, 
  130, 180], tan:[210, 180, 140], teal:[0, 128, 128], thistle:[216, 191, 216], tomato:[255, 99, 71], turquoise:[64, 224, 208], violet:[238, 130, 238], wheat:[245, 222, 179], white:[255, 255, 255], whitesmoke:[245, 245, 245], yellow:[255, 255, 0], yellowgreen:[154, 205, 50]}, i = {"[138,43,226]":"blueviolet", "[255,245,238]":"seashell", "[255,250,205]":"lemonchiffon", "[255,20,147]":"deeppink", "[72,61,139]":"darkslateblue", "[139,0,0]":"darkred", "[65,105,225]":"royalblue", "[135,206,235]":"skyblue", 
  "[184,134,11]":"darkgoldenrod", "[255,228,181]":"moccasin", "[255,222,173]":"navajowhite", "[127,255,0]":"chartreuse", "[210,105,30]":"chocolate", "[175,238,238]":"paleturquoise", "[248,248,255]":"ghostwhite", "[211,211,211]":"lightgrey", "[30,144,255]":"dodgerblue", "[160,82,45]":"sienna", "[0,0,255]":"blue", "[255,140,0]":"darkorange", "[0,255,255]":"cyan", "[107,142,35]":"olivedrab", "[220,20,60]":"crimson", "[50,205,50]":"limegreen", "[139,69,19]":"saddlebrown", "[216,191,216]":"thistle", "[218,112,214]":"orchid", 
  "[176,196,222]":"lightsteelblue", "[199,21,133]":"mediumvioletred", "[250,240,230]":"linen", "[255,218,185]":"peachpuff", "[245,245,245]":"whitesmoke", "[255,165,0]":"orange", "[255,250,240]":"floralwhite", "[60,179,113]":"mediumseagreen", "[102,205,170]":"mediumaquamarine", "[75,0,130]":"indigo", "[255,255,0]":"yellow", "[165,42,42]":"brown", "[152,251,152]":"palegreen", "[123,104,238]":"mediumslateblue", "[0,139,139]":"darkcyan", "[221,160,221]":"plum", "[119,136,153]":"lightslategrey", "[189,183,107]":"darkkhaki", 
  "[219,112,147]":"palevioletred", "[255,255,224]":"lightyellow", "[240,128,128]":"lightcoral", "[238,232,170]":"palegoldenrod", "[255,105,180]":"hotpink", "[100,149,237]":"cornflowerblue", "[47,79,79]":"darkslategrey", "[0,250,154]":"mediumspringgreen", "[0,128,0]":"green", "[135,206,250]":"lightskyblue", "[205,92,92]":"indianred", "[0,0,0]":"black", "[240,230,140]":"khaki", "[128,0,128]":"purple", "[188,143,143]":"rosybrown", "[0,0,205]":"mediumblue", "[205,133,63]":"peru", "[176,224,230]":"powderblue", 
  "[240,255,255]":"azure", "[250,235,215]":"antiquewhite", "[218,165,32]":"goldenrod", "[255,255,240]":"ivory", "[0,255,0]":"lime", "[0,191,255]":"deepskyblue", "[173,255,47]":"greenyellow", "[139,0,139]":"darkmagenta", "[245,222,179]":"wheat", "[255,99,71]":"tomato", "[25,25,112]":"midnightblue", "[70,130,180]":"steelblue", "[143,188,143]":"darkseagreen", "[127,255,212]":"aquamarine", "[0,100,0]":"darkgreen", "[154,205,50]":"yellowgreen", "[0,255,127]":"springgreen", "[240,255,240]":"honeydew", 
  "[255,250,250]":"snow", "[148,0,211]":"darkviolet", "[106,90,205]":"slateblue", "[178,34,34]":"firebrick", "[0,0,139]":"darkblue", "[192,192,192]":"silver", "[112,128,144]":"slategrey", "[255,248,220]":"cornsilk", "[144,238,144]":"lightgreen", "[255,255,255]":"white", "[250,250,210]":"lightgoldenrodyellow", "[224,255,255]":"lightcyan", "[255,215,0]":"gold", "[147,112,219]":"mediumpurple", "[240,248,255]":"aliceblue", "[230,230,250]":"lavender", "[253,245,230]":"oldlace", "[245,245,220]":"beige", 
  "[0,206,209]":"darkturquoise", "[255,192,203]":"pink", "[210,180,140]":"tan", "[222,184,135]":"burlywood", "[186,85,211]":"mediumorchid", "[255,160,122]":"lightsalmon", "[124,252,0]":"lawngreen", "[32,178,170]":"lightseagreen", "[255,239,213]":"papayawhip", "[169,169,169]":"darkgrey", "[244,164,96]":"sandybrown", "[173,216,230]":"lightblue", "[255,235,205]":"blanchedalmond", "[255,0,0]":"red", "[46,139,87]":"seagreen", "[255,0,255]":"magenta", "[255,127,80]":"coral", "[250,128,114]":"salmon", "[72,209,204]":"mediumturquoise", 
  "[128,128,0]":"olive", "[128,128,128]":"grey", "[255,182,193]":"lightpink", "[238,130,238]":"violet", "[220,220,220]":"gainsboro", "[85,107,47]":"darkolivegreen", "[64,224,208]":"turquoise", "[153,50,204]":"darkorchid", "[34,139,34]":"forestgreen", "[255,228,196]":"bisque", "[245,255,250]":"mintcream", "[0,0,128]":"navy", "[255,240,245]":"lavenderblush", "[0,128,128]":"teal", "[105,105,105]":"dimgrey", "[95,158,160]":"cadetblue", "[255,69,0]":"orangered", "[233,150,122]":"darksalmon", "[255,228,225]":"mistyrose", 
  "[128,0,0]":"maroon"};
  window.color_convert = {rgb:{hsl:m, hsv:a, cmyk:b, keyword:e, xyz:j, lab:f}, hsl:{rgb:h, hsv:c, cmyk:function(a) {
    return b(h(a))
  }, keyword:function(a) {
    return e(h(a))
  }}, hsv:{rgb:g, hsl:o, cmyk:function(a) {
    return b(g(a))
  }, keyword:function(a) {
    return e(g(a))
  }}, cmyk:{rgb:n, hsl:function(a) {
    return m(n(a))
  }, hsv:function(c) {
    return a(n(c))
  }, keyword:function(a) {
    return e(n(a))
  }}, keyword:{rgb:k, hsl:function(a) {
    return m(l[a])
  }, hsv:function(c) {
    return a(l[c])
  }, cmyk:function(a) {
    return b(l[a])
  }}, xyz:{rgb:p}, rgb2hsl:m, rgb2hsv:a, rgb2cmyk:b, rgb2keyword:e, rgb2xyz:j, rgb2lab:f, hsl2rgb:h, hsl2hsv:c, hsl2cmyk:function(a) {
    return b(h(a))
  }, hsl2keyword:function(a) {
    return e(h(a))
  }, hsv2rgb:g, hsv2hsl:o, hsv2cmyk:function(a) {
    return b(g(a))
  }, hsv2keyword:function(a) {
    return e(g(a))
  }, cmyk2rgb:n, cmyk2hsl:function(a) {
    return m(n(a))
  }, cmyk2hsv:function(c) {
    return a(n(c))
  }, cmyk2keyword:function(a) {
    return e(n(a))
  }, keyword2rgb:k, keyword2hsl:function(a) {
    return m(l[a])
  }, keyword2hsv:function(c) {
    return a(l[c])
  }, keyword2cmyk:function(a) {
    return b(l[a])
  }, keyword2lab:function(a) {
    return f(l[a])
  }, keyword2xyz:function(a) {
    return j(l[a])
  }, xyz2rgb:p, xyz2lab:function(a) {
    var c = a[0], b = a[1], a = a[2];
    c /= 95.047;
    b /= 100;
    a /= 108.883;
    c = c > 0.008856 ? Math.pow(c, 1 / 3) : 7.787 * c + 16 / 116;
    b = b > 0.008856 ? Math.pow(b, 1 / 3) : 7.787 * b + 16 / 116;
    a = a > 0.008856 ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116;
    return[116 * b - 16, 500 * (c - b), 200 * (b - a)]
  }, lab2xyz:function(a) {
    var c = a[0], b = a[1], a = a[2], g, e, f;
    c <= 8 ? (c = c * 100 / 903.3, f = 7.787 * (c / 100) + 16 / 116) : (c = 100 * Math.pow((c + 16) / 116, 3), f = Math.pow(c / 100, 1 / 3));
    g = g / 95.047 <= 0.008856 ? g = 95.047 * (b / 500 + f - 16 / 116) / 7.787 : 95.047 * Math.pow(b / 500 + f, 3);
    e = e / 108.883 <= 0.008859 ? e = 108.883 * (f - a / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(f - a / 200, 3);
    return[g, c, e]
  }}
})();
(function() {
  function m(a) {
    if(a) {
      var b = /^#([a-fA-F0-9]{6})$/, e = /^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*([\d\.]+)\s*)?\)$/, h = /^rgba?\(\s*([\d\.]+)\%\s*,\s*([\d\.]+)\%\s*,\s*([\d\.]+)\%\s*(?:,\s*([\d\.]+)\s*)?\)$/, j = /(\D+)/, k = [0, 0, 0], l = 1, i = a.match(/^#([a-fA-F0-9]{3})$/);
      if(i) {
        i = i[1];
        for(a = 0;a < k.length;a++) {
          k[a] = parseInt(i[a] + i[a], 16)
        }
      }else {
        if(i = a.match(b)) {
          i = i[1];
          for(a = 0;a < k.length;a++) {
            k[a] = parseInt(i.slice(a * 2, a * 2 + 2), 16)
          }
        }else {
          if(i = a.match(e)) {
            for(a = 0;a < k.length;a++) {
              k[a] = parseInt(i[a + 1])
            }
            l = parseFloat(i[4])
          }else {
            if(i = a.match(h)) {
              for(a = 0;a < k.length;a++) {
                k[a] = Math.round(parseFloat(i[a + 1]) * 2.55)
              }
              l = parseFloat(i[4])
            }else {
              if(i = a.match(j)) {
                if(i[1] == "transparent") {
                  return[0, 0, 0, 0]
                }
                k = color_convert.keyword2rgb(i[1]);
                if(!k) {
                  return
                }
              }
            }
          }
        }
      }
      for(a = 0;a < k.length;a++) {
        k[a] = f(k[a], 0, 255)
      }
      l = !l && l != 0 ? 1 : f(l, 0, 1);
      k.push(l);
      return k
    }
  }
  function a(a) {
    if(a) {
      var b = a.match(/^hsla?\(\s*(\d+)\s*,\s*([\d\.]+)%\s*,\s*([\d\.]+)%\s*(?:,\s*([\d\.]+)\s*)?\)/);
      if(b) {
        var a = f(parseInt(b[1]), 0, 360), e = f(parseFloat(b[2]), 0, 100), h = f(parseFloat(b[3]), 0, 100), b = f(parseFloat(b[4]) || 1, 0, 1);
        return[a, e, h, b]
      }
    }
  }
  function b(a, b) {
    return"rgba(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + (b || a[3] || 1) + ")"
  }
  function e(a, b) {
    var e = Math.round(a[0] / 255 * 100), f = Math.round(a[1] / 255 * 100), h = Math.round(a[2] / 255 * 100);
    return"rgba(" + e + "%, " + f + "%, " + h + "%, " + (b || a[3] || 1) + ")"
  }
  function j(a, b) {
    return"hsla(" + a[0] + ", " + a[1] + "%, " + a[2] + "%, " + (b || a[3] || 1) + ")"
  }
  function f(a, b, e) {
    return Math.min(Math.max(b, a), e)
  }
  function h(a) {
    a = a.toString(16).toUpperCase();
    return a.length < 2 ? "0" + a : a
  }
  if(typeof window.color_convert == "undefined") {
    throw"color-convert required";
  }
  window.color_string = {getRgba:m, getHsla:a, getRgb:function(a) {
    return m(a).slice(0, 3)
  }, getHsl:function(b) {
    return a(b).slice(0, 3)
  }, getAlpha:function(b) {
    var e = m(b);
    if(e) {
      return e[3]
    }else {
      if(e = a(b)) {
        return e[3]
      }
    }
  }, hexString:function(a) {
    return"#" + h(a[0]) + h(a[1]) + h(a[2])
  }, rgbString:function(a, e) {
    return e < 1 || a[3] && a[3] < 1 ? b(a, e) : "rgb(" + a[0] + ", " + a[1] + ", " + a[2] + ")"
  }, rgbaString:b, percentString:function(a, b) {
    if(b < 1 || a[3] && a[3] < 1) {
      return e(a, b)
    }
    var f = Math.round(a[0] / 255 * 100), h = Math.round(a[1] / 255 * 100), j = Math.round(a[2] / 255 * 100);
    return"rgb(" + f + "%, " + h + "%, " + j + "%)"
  }, percentaString:e, hslString:function(a, b) {
    return b < 1 || a[3] && a[3] < 1 ? j(a, b) : "hsl(" + a[0] + ", " + a[1] + "%, " + a[2] + "%)"
  }, hslaString:j, keyword:function(a) {
    return color_convert.rgb2keyword(a.slice(0, 3))
  }}
})();
(function() {
  if(typeof window.color_convert == "undefined") {
    throw"color-convert required";
  }
  if(typeof window.color_string == "undefined") {
    throw"color-string required";
  }
  var m = {init:function(a) {
    $.extend(this, m);
    this.values = {rgb:[0, 0, 0], hsl:[0, 0, 0], hsv:[0, 0, 0], cmyk:[0, 0, 0, 0], alpha:1};
    if(typeof a == "string") {
      var b = color_string.getRgba(a);
      b ? this.setValues("rgb", b) : (b = color_string.getHsla(a)) && this.setValues("hsl", b)
    }else {
      typeof a == "object" && (b = a, b.r !== void 0 || b.red !== void 0 ? this.setValues("rgb", b) : b.l !== void 0 || b.lightness !== void 0 ? this.setValues("hsl", b) : b.v !== void 0 || b.value !== void 0 ? this.setValues("hsv", b) : (b.c !== void 0 || b.cyan !== void 0) && this.setValues("cmyk", b))
    }
  }, rgb:function(a) {
    return this.setSpace("rgb", arguments)
  }, hsl:function(a) {
    return this.setSpace("hsl", arguments)
  }, hsv:function(a) {
    return this.setSpace("hsv", arguments)
  }, cmyk:function(a) {
    return this.setSpace("cmyk", arguments)
  }, rgbArray:function() {
    return this.values.rgb
  }, hslArray:function() {
    return this.values.hsl
  }, hsvArray:function() {
    return this.values.hsv
  }, cmykArray:function() {
    return this.values.cmyk
  }, rgbaArray:function() {
    var a = this.values.rgb;
    a.push(this.values.alpha);
    return a
  }, hslaArray:function() {
    var a = this.values.hsl;
    a.push(this.values.alpha);
    return a
  }, alpha:function(a) {
    if(a === void 0) {
      return this.values.alpha
    }
    this.setValues("alpha", a);
    return this
  }, red:function(a) {
    return this.setChannel("rgb", 0, a)
  }, green:function(a) {
    return this.setChannel("rgb", 1, a)
  }, blue:function(a) {
    return this.setChannel("rgb", 2, a)
  }, hue:function(a) {
    return this.setChannel("hsl", 0, a)
  }, saturation:function(a) {
    return this.setChannel("hsl", 1, a)
  }, lightness:function(a) {
    return this.setChannel("hsl", 2, a)
  }, saturationv:function(a) {
    return this.setChannel("hsv", 1, a)
  }, value:function(a) {
    return this.setChannel("hsv", 2, a)
  }, cyan:function(a) {
    return this.setChannel("cmyk", 0, a)
  }, magenta:function(a) {
    return this.setChannel("cmyk", 1, a)
  }, yellow:function(a) {
    return this.setChannel("cmyk", 2, a)
  }, black:function(a) {
    return this.setChannel("cmyk", 3, a)
  }, hexString:function() {
    return color_string.hexString(this.values.rgb)
  }, rgbString:function() {
    return color_string.rgbString(this.values.rgb, this.values.alpha)
  }, rgbaString:function() {
    return color_string.rgbaString(this.values.rgb, this.values.alpha)
  }, percentString:function() {
    return color_string.percentString(this.values.rgb, this.values.alpha)
  }, hslString:function() {
    return color_string.hslString(this.values.hsl, this.values.alpha)
  }, hslaString:function() {
    return color_string.hslaString(this.values.hsl, this.values.alpha)
  }, keyword:function() {
    return color_string.keyword(this.values.rgb, this.values.alpha)
  }, luminosity:function() {
    for(var a = this.values.rgb, b = 0;b < a.length;b++) {
      var e = a[b] / 255;
      a[b] = e <= 0.03928 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4)
    }
    return 0.2126 * a[0] + 0.7152 * a[1] + 0.0722 * a[2]
  }, contrast:function(a) {
    var b = this.luminosity(), a = a.luminosity();
    return b > a ? (b + 0.05) / (a + 0.05) : (a + 0.05) / (b + 0.05)
  }, dark:function() {
    var a = this.values.rgb;
    return(a[0] * 299 + a[1] * 587 + a[2] * 114) / 1E3 < 128
  }, light:function() {
    return!this.dark()
  }, negate:function() {
    for(var a = [], b = 0;b < 3;b++) {
      a[b] = 255 - this.values.rgb[b]
    }
    this.setValues("rgb", a);
    return this
  }, lighten:function(a) {
    this.values.hsl[2] += this.values.hsl[2] * a;
    this.setValues("hsl", this.values.hsl);
    return this
  }, darken:function(a) {
    this.values.hsl[2] -= this.values.hsl[2] * a;
    this.setValues("hsl", this.values.hsl);
    return this
  }, saturate:function(a) {
    this.values.hsl[1] += this.values.hsl[1] * a;
    this.setValues("hsl", this.values.hsl);
    return this
  }, desaturate:function(a) {
    this.values.hsl[1] -= this.values.hsl[1] * a;
    this.setValues("hsl", this.values.hsl);
    return this
  }, greyscale:function() {
    var a = this.values.rgb, a = a[0] * 0.3 + a[1] * 0.59 + a[2] * 0.11;
    this.setValues("rgb", [a, a, a]);
    return this
  }, clearer:function(a) {
    this.setValues("alpha", this.values.alpha - this.values.alpha * a);
    return this
  }, opaquer:function(a) {
    this.setValues("alpha", this.values.alpha + this.values.alpha * a);
    return this
  }, rotate:function(a) {
    var b = this.values.hsl[0], b = (b + a) % 360;
    this.values.hsl[0] = b < 0 ? 360 + b : b;
    this.setValues("hsl", this.values.hsl);
    return this
  }, mix:function(a, b) {
    for(var b = 1 - (b || 0.5), e = b * 2 - 1, j = this.alpha() - a.alpha(), e = ((e * j == -1 ? e : (e + j) / (1 + e * j)) + 1) / 2, j = 1 - e, f = this.rgbArray(), h = a.rgbArray(), c = 0;c < f.length;c++) {
      f[c] = f[c] * e + h[c] * j
    }
    this.setValues("rgb", f);
    this.setValues("alpha", this.alpha() * b + a.alpha() * (1 - b));
    return this
  }, toJSON:function() {
    return this.rgb()
  }, getValues:function(a) {
    for(var b = {}, e = 0;e < a.length;e++) {
      b[a[e]] = this.values[a][e]
    }
    if(this.values.alpha != 1) {
      b.a = this.values.alpha
    }
    return b
  }, setValues:function(a, b) {
    var e = {rgb:["red", "green", "blue"], hsl:["hue", "saturation", "lightness"], hsv:["hue", "saturation", "value"], cmyk:["cyan", "magenta", "yellow", "black"]}, j = {rgb:[255, 255, 255], hsl:[360, 100, 100], hsv:[360, 100, 100], cmyk:[100, 100, 100, 100]}, f = 1;
    if(a == "alpha") {
      f = b
    }else {
      if(b.length) {
        this.values[a] = b.slice(0, a.length), f = b[a.length]
      }else {
        if(b[a[0]] !== void 0) {
          for(f = 0;f < a.length;f++) {
            this.values[a][f] = b[a[f]]
          }
          f = b.a
        }else {
          if(b[e[a][0]] !== void 0) {
            for(var h = e[a], f = 0;f < a.length;f++) {
              this.values[a][f] = b[h[f]]
            }
            f = b.alpha
          }
        }
      }
    }
    this.values.alpha = Math.max(0, Math.min(1, f || this.values.alpha));
    if(a != "alpha") {
      for(var c in e) {
        c != a && (this.values[c] = color_convert[a][c](this.values[a]));
        for(f = 0;f < c.length;f++) {
          h = Math.max(0, Math.min(j[c][f], this.values[c][f])), this.values[c][f] = Math.round(h)
        }
      }
      return true
    }
  }, setSpace:function(a, b) {
    var e = b[0];
    if(e === void 0) {
      return this.getValues(a)
    }
    typeof e == "number" && (e = Array.prototype.slice.call(b));
    this.setValues(a, e);
    return this
  }, setChannel:function(a, b, e) {
    if(e === void 0) {
      return this.values[a][b]
    }
    this.values[a][b] = e;
    this.setValues(a, this.values[a]);
    return this
  }};
  window.Color = function(a) {
    return new m.init(a)
  }
})();
